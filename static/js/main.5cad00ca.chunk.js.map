{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/NavigationBar.jsx","components/Cell.jsx","components/Events.jsx","components/Calendar.jsx","components/EventsPage.jsx","components/App.jsx","index.js"],"names":["Header","to","style","textDecoration","src","alt","width","height","Footer","NavigationBar","classes","makeStyles","theme","root","flexGrow","button","margin","spacing","useStyles","className","Grid","container","direction","justify","alignItems","item","xs","Button","component","RouterLink","variant","color","startIcon","Cell","React","Component","constructor","props","super","this","state","render","onClick","day","formattedDate","display","flexWrap","textField","marginLeft","marginRight","dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","date","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","format","Events","eventData","name","desc","start","thedate","end","remind","open","add","id","require","generate","title","refs","value","description","ISOstartTime","startTime","NormalstartTime","parseISO","ISOendTime","endTime","NormalendTime","reminderTime","ReminderTime","obj","remember","localStorage","getItem","push","setItem","JSON","stringify","parse","alert","getInputDate","checkFun","checkBox","document","getElementById","list","checked","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","class","action","required","type","ref","placeholder","TextareaAutosize","cols","rows","defaultValue","defaultChecked","for","DialogActions","bind","Calendar","useState","currentMonth","selectedDate","displayForm","setState","nextMonth","addMonths","prevMonth","subMonths","onDateClick","temp","closeForm","days","startDate","startOfWeek","i","key","addDays","renderDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","console","log","isSameMonth","isSameDay","renderCells","maxWidth","media","EventsPage","handleChange","event","search","target","editEvent","index","splice","renderForm","window","location","reload","createCard","eventCard","Card","CardActionArea","CardContent","Typography","gutterBottom","textTransform","CardActions","data-key","size","deleteEvent","confirm","data","onChange","filteredSearch","filter","toLowerCase","indexOf","map","Home","App","path","exact","ReactDOM"],"mappings":"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","file":"static/js/main.5cad00ca.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header>\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <h1>\n          <img\n            src={\"https://img.icons8.com/cotton/64/000000/olympic-torch.png\"}\n            alt=\"logo\"\n            width=\"50px\"\n            height=\"40px\"\n          />\n          Keeper\n        </h1>\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>Created by Praveen Pujar.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n\nfunction NavigationBar() {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    button: {\n      margin: theme.spacing(1)\n    }\n  }));\n\n  const classes = useStyles();\n  return (\n    <div>\n      <ul>\n        <div className={classes.root}>\n          <Grid\n            container\n            spacing={3}\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"baseline\"\n          >\n            <Grid item xs={6}>\n              <Button\n                component={RouterLink}\n                to=\"/Calendar\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DateRangeIcon />}\n              >\n                Month\n              </Button>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Button\n                component={RouterLink}\n                to=\"/EventsPage\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<EventAvailableIcon />}\n              >\n                Events\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </ul>\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","import React from \"react\";\r\n\r\nclass Cell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = props;\r\n    // console.log(props);\r\n  }\r\n\r\n  // handleClick(i) {\r\n  //   this.state.handleClick(this.state.selectedState);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.state.className}\r\n        onClick={() => this.state.onClick(this.state.day)}\r\n      >\r\n        <span className=\"number\">{this.state.formattedDate}</span>\r\n        <span className=\"bg\">{this.state.formattedDate}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport \"./Events.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\n// eslint-disable-next-line\r\nimport parseISO from \"date-fns/parseISO\";\r\nimport format from \"date-fns/format\";\r\n// eslint-disable-next-line\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n// eslint-disable-next-line\r\nfunction onCloseClick() {\r\n  document.getElementById(\"id01\").style.display = \"none\";\r\n}\r\n\r\nvar dateFormat = (function() {\r\n  var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n    timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n    timezoneClip = /[^-+\\dA-Z]/g,\r\n    pad = function(val, len) {\r\n      val = String(val);\r\n      len = len || 2;\r\n      while (val.length < len) val = \"0\" + val;\r\n      return val;\r\n    };\r\n\r\n  // Regexes and supporting functions are cached through closure\r\n  return function(date, mask, utc) {\r\n    var dF = dateFormat;\r\n\r\n    // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\r\n    if (\r\n      arguments.length === 1 &&\r\n      Object.prototype.toString.call(date) === \"[object String]\" &&\r\n      !/\\d/.test(date)\r\n    ) {\r\n      mask = date;\r\n      date = undefined;\r\n    }\r\n\r\n    // Passing date through Date applies Date.parse, if necessary\r\n    date = date ? new Date(date) : new Date();\r\n    if (isNaN(date)) throw SyntaxError(\"invalid date\");\r\n\r\n    mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n\r\n    // Allow setting the utc argument via the mask\r\n    if (mask.slice(0, 4) === \"UTC:\") {\r\n      mask = mask.slice(4);\r\n      utc = true;\r\n    }\r\n\r\n    var _ = utc ? \"getUTC\" : \"get\",\r\n      d = date[_ + \"Date\"](),\r\n      D = date[_ + \"Day\"](),\r\n      m = date[_ + \"Month\"](),\r\n      y = date[_ + \"FullYear\"](),\r\n      H = date[_ + \"Hours\"](),\r\n      M = date[_ + \"Minutes\"](),\r\n      s = date[_ + \"Seconds\"](),\r\n      L = date[_ + \"Milliseconds\"](),\r\n      o = utc ? 0 : date.getTimezoneOffset(),\r\n      flags = {\r\n        d: d,\r\n        dd: pad(d),\r\n        ddd: dF.i18n.dayNames[D],\r\n        dddd: dF.i18n.dayNames[D + 7],\r\n        m: m + 1,\r\n        mm: pad(m + 1),\r\n        mmm: dF.i18n.monthNames[m],\r\n        mmmm: dF.i18n.monthNames[m + 12],\r\n        yy: String(y).slice(2),\r\n        yyyy: y,\r\n        h: H % 12 || 12,\r\n        hh: pad(H % 12 || 12),\r\n        H: H,\r\n        HH: pad(H),\r\n        M: M,\r\n        MM: pad(M),\r\n        s: s,\r\n        ss: pad(s),\r\n        l: pad(L, 3),\r\n        L: pad(L > 99 ? Math.round(L / 10) : L),\r\n        t: H < 12 ? \"a\" : \"p\",\r\n        tt: H < 12 ? \"am\" : \"pm\",\r\n        T: H < 12 ? \"A\" : \"P\",\r\n        TT: H < 12 ? \"AM\" : \"PM\",\r\n        Z: utc\r\n          ? \"UTC\"\r\n          : (String(date).match(timezone) || [\"\"])\r\n              .pop()\r\n              .replace(timezoneClip, \"\"),\r\n        o:\r\n          (o > 0 ? \"-\" : \"+\") +\r\n          pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\r\n        S: [\"th\", \"st\", \"nd\", \"rd\"][\r\n          d % 10 > 3 ? 0 : (((d % 100) - (d % 10) !== 10) * d) % 10\r\n        ]\r\n      };\r\n\r\n    return mask.replace(token, function($0) {\r\n      return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n    });\r\n  };\r\n})();\r\n\r\n// Some common format strings\r\ndateFormat.masks = {\r\n  default: \"ddd mmm dd yyyy HH:MM:ss\",\r\n  shortDate: \"m/d/yy\",\r\n  mediumDate: \"mmm d, yyyy\",\r\n  longDate: \"mmmm d, yyyy\",\r\n  fullDate: \"dddd, mmmm d, yyyy\",\r\n  shortTime: \"h:MM TT\",\r\n  mediumTime: \"h:MM:ss TT\",\r\n  longTime: \"h:MM:ss TT Z\",\r\n  isoDate: \"yyyy-mm-dd\",\r\n  isoTime: \"HH:MM:ss\",\r\n  isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\r\n  isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n};\r\n\r\n// Internationalization strings\r\ndateFormat.i18n = {\r\n  dayNames: [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\",\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ],\r\n  monthNames: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ]\r\n};\r\n\r\n// For convenience...\r\nDate.prototype.format = function(mask, utc) {\r\n  return dateFormat(this, mask, utc);\r\n};\r\n\r\n// Event class\r\nclass Events extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      props,\r\n      eventData: [],\r\n      name: \"\",\r\n      desc: \"\",\r\n      start: props.thedate,\r\n      end: props.thedate,\r\n      remind: false,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  // Add function to store the data to localstorage\r\n\r\n  add() {\r\n    var shortid = require(\"shortid\");\r\n\r\n    let id = shortid.generate();\r\n    let title = this.refs.title.value;\r\n    let description = this.refs.description.value;\r\n    let ISOstartTime = this.refs.startTime.value;\r\n    let NormalstartTime = parseISO(ISOstartTime);\r\n    NormalstartTime = format(NormalstartTime, \"PPpp\");\r\n    let ISOendTime = this.refs.endTime.value;\r\n    let NormalendTime = parseISO(ISOendTime);\r\n    NormalendTime = format(NormalendTime, \"PPpp\");\r\n    let reminderTime = this.refs.ReminderTime.value;\r\n    var remember = \"off\";\r\n    if (reminderTime === \"No Reminder\") {\r\n      remember = \"Off\";\r\n    } else {\r\n      remember = \"On\";\r\n    }\r\n    // let remember = this.refs.remember.defaultChecked;\r\n    let obj = {\r\n      id: id,\r\n      title: title,\r\n      description: description,\r\n      startTime: NormalstartTime,\r\n      endTime: NormalendTime,\r\n      remember: remember,\r\n      reminderTime: reminderTime\r\n    };\r\n\r\n    if (localStorage.getItem(\"eventData\") == null) {\r\n      var eventData = [];\r\n      eventData.push(obj);\r\n      localStorage.setItem(\"eventData\", JSON.stringify(eventData));\r\n    } else {\r\n      var eventData = JSON.parse(localStorage.getItem(\"eventData\"));\r\n      eventData.push(obj);\r\n      localStorage.setItem(\"eventData\", JSON.stringify(eventData));\r\n    }\r\n    this.state.props.onClick();\r\n    alert(`Event added Successfully!`);\r\n  }\r\n\r\n  getInputDate(thedate) {\r\n    var data;\r\n\r\n    // data = format(thedate, \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\");\r\n    data = thedate.format(\"yyyy-mm-dd'T'HH:MM:ss\");\r\n    // alert(data);\r\n    return data;\r\n  }\r\n\r\n  checkFun() {\r\n    var checkBox = document.getElementById(\"check\");\r\n    var list = document.getElementById(\"ReminderTime\");\r\n\r\n    if (checkBox.checked === true) {\r\n      list.style.display = \"block\";\r\n    } else {\r\n      list.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var required = true;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          // eslint-disable-next-line\r\n          open={open}\r\n          onClose={() => this.state.props.onClick()}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add a New Task</DialogTitle>\r\n          <DialogContent>\r\n            <form class=\"eventForm-content\" action=\"/action_page.php\">\r\n              <div class=\"container\">\r\n                <h1> Event Details </h1>\r\n                <hr />\r\n\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <label>\r\n                          <b>Event Name</b>\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          className=\"entry\"\r\n                          required=\"required\"\r\n                          type=\"text\"\r\n                          ref=\"title\"\r\n                          placeholder=\"Event Name\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <label>\r\n                          <b>Event Description</b>\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <TextareaAutosize\r\n                          required=\"required\"\r\n                          type=\"textarea\"\r\n                          ref=\"description\"\r\n                          placeholder=\"Description\"\r\n                          cols=\"35\"\r\n                          rows=\"2\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <label>\r\n                          <b>Event Start Time</b>\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          className=\"entry\"\r\n                          type=\"datetime-local\"\r\n                          ref=\"startTime\"\r\n                          defaultValue={this.getInputDate(this.state.start)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <label>\r\n                          <b>Event End Time</b>\r\n                        </label>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          className=\"entry\"\r\n                          type=\"datetime-local\"\r\n                          ref=\"endTime\"\r\n                          defaultValue={this.getInputDate(this.state.end)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"check\"\r\n                          defaultChecked={`${\r\n                            this.state.remind ? \"\" : \"checked\"\r\n                          }`}\r\n                          ref=\"remember\"\r\n                          onClick={this.checkFun}\r\n                        />\r\n                      </td>{\" \"}\r\n                      <td>\r\n                        {\" \"}\r\n                        <label>\r\n                          {\" \"}\r\n                          <b>Remind me</b>\r\n                        </label>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr id=\"ReminderTime\">\r\n                      <td>\r\n                        <label for=\"ReminderTime\">\r\n                          <b>Remind before :</b>\r\n                        </label>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <select ref=\"ReminderTime\">\r\n                          <option value=\"No Reminder\">No Reminder</option>\r\n                          <option value=\"1 Hour\">1 Hour</option>\r\n                          <option value=\"6 Hours\">6 Hours</option>\r\n                          <option value=\"1 Day\">1 Day</option>\r\n                          <option value=\"1 Week\">1 Week</option>\r\n                        </select>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </form>\r\n            {/* </div> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => this.state.props.onClick()} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n\r\n            {/* This is to store the data into the localstorage */}\r\n\r\n            <Button onClick={this.add.bind(this)} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* <div id=\"id01\">\r\n         \r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Events;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  format,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  startOfMonth,\r\n  endOfMonth\r\n} from \"date-fns\";\r\nimport {\r\n  isSameDay,\r\n  isSameMonth,\r\n  addMonths,\r\n  subMonths,\r\n  addDays\r\n} from \"date-fns\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Cell from \"./Cell\";\r\n\r\nimport Events from \"./Events\";\r\n\r\nfunction Calendar() {\r\n  const [state, setState, displayForm] = useState({\r\n    currentMonth: new Date(),\r\n    selectedDate: new Date(),\r\n    displayForm: false\r\n  });\r\n\r\n  function renderHeader() {\r\n    const dateFormat = \"MMMM yyyy\";\r\n\r\n    return (\r\n      <div className=\"header_class row flex-middle\">\r\n        <div className=\"col col-start\">\r\n          <div className=\"icon\" onClick={prevMonth}>\r\n            <ArrowBackIosIcon />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col col-center\">\r\n          <span>{format(state.currentMonth, dateFormat)}</span>\r\n        </div>\r\n\r\n        <div className=\"col col-end\">\r\n          <div className=\"icon\" onClick={nextMonth}>\r\n            <ArrowForwardIosIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderDays() {\r\n    const dateFormat = \"eee\";\r\n    const days = [];\r\n\r\n    let startDate = startOfWeek(state.currentMonth);\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n          {format(addDays(startDate, i), dateFormat)}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"days row\"> {days} </div>;\r\n  }\r\n\r\n  function renderCells() {\r\n    const { currentMonth, selectedDate } = state;\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart);\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n    console.log(selectedDate);\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        days.push(\r\n          <Cell\r\n            day={day}\r\n            monthStart={monthStart}\r\n            selectedDate={selectedDate}\r\n            formattedDate={formattedDate}\r\n            key={day}\r\n            className={`col cell ${\r\n              !isSameMonth(day, monthStart)\r\n                ? \"disabled\"\r\n                : isSameDay(day, selectedDate)\r\n                ? \"selected\"\r\n                : \"\"\r\n            }`}\r\n            onClick={onDateClick}\r\n          />\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body_class\">{rows}</div>;\r\n  }\r\n\r\n  function nextMonth() {\r\n    setState({\r\n      currentMonth: addMonths(state.currentMonth, 1),\r\n      selectedDate: state.selectedDate,\r\n      displayForm: false\r\n    });\r\n  }\r\n\r\n  function prevMonth() {\r\n    setState({\r\n      currentMonth: subMonths(state.currentMonth, 1),\r\n      selectedDate: state.selectedDate,\r\n      displayForm: false\r\n    });\r\n  }\r\n\r\n  function onDateClick(temp) {\r\n    setState({\r\n      selectedDate: temp,\r\n      currentMonth: state.currentMonth,\r\n      displayForm: true\r\n    });\r\n    return <Events />;\r\n  }\r\n\r\n  function renderForm() {\r\n    if (state.displayForm === true) {\r\n      return (\r\n        <div>\r\n          <Events onClick={closeForm} thedate={state.selectedDate} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n\r\n  function closeForm() {\r\n    setState({\r\n      currentMonth: state.selectedDate,\r\n      selectedDate: state.selectedDate,\r\n      displayForm: false\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      {renderHeader()}\r\n      {renderDays()}\r\n      {renderForm()}\r\n      {renderCells()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Events from \"./Events\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n// const classes = useStyles();\r\nclass EventsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayForm: false,\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  // search function\r\n  handleChange = event => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  // These 3 functions are used for edit option on event\r\n  editEvent(id) {\r\n    this.setState({\r\n      displayForm: true\r\n    });\r\n    let index = id;\r\n    alert(index);\r\n    var eventData = JSON.parse(localStorage.getItem(\"eventData\"));\r\n    eventData.splice(index, 1);\r\n    localStorage.setItem(\"eventData\", JSON.stringify(eventData));\r\n\r\n    return <Events />;\r\n  }\r\n\r\n  renderForm() {\r\n    if (this.state.displayForm === true) {\r\n      const day = new Date();\r\n      return (\r\n        <div>\r\n          <Events onClick={this.closeForm.bind(this)} thedate={day} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n\r\n  closeForm(event) {\r\n    this.setState({\r\n      displayForm: false\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  createCard(eventCard, index) {\r\n    return (\r\n      <div key={index} className=\"container\">\r\n        <div className=\"row\">\r\n          <div>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"baseline\"\r\n            >\r\n              <Grid item>\r\n                <Card>\r\n                  <CardActionArea>\r\n                    <CardContent>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        style={{ textTransform: \"Capitalize\" }}\r\n                      >\r\n                        {eventCard.title}\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Description : {eventCard.description}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Start Time : {eventCard.startTime}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        End Time : {eventCard.endTime}\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Reminder : {eventCard.remember}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        Reminder Time : {eventCard.reminderTime}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      data-key={index}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        this.editEvent(index);\r\n                      }}\r\n                    >\r\n                      <EditIcon />\r\n                    </Button>\r\n                    <Button\r\n                      // data-key={index}\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      onClick={() => {\r\n                        this.deleteEvent(index);\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // This is the delete option function\r\n  deleteEvent(id) {\r\n    // eslint-disable-next-line\r\n    var result = confirm(\"Do you want to delete this?\");\r\n    if (result) {\r\n      var eventData = JSON.parse(localStorage.getItem(\"eventData\"));\r\n      var index = id;\r\n      alert(index);\r\n      eventData.splice(index, 1);\r\n      localStorage.setItem(\"eventData\", JSON.stringify(eventData));\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = JSON.parse(localStorage.getItem(\"eventData\"));\r\n    const { search } = this.state;\r\n    \r\n    // This is main eventpage function\r\n    if (data == null) {\r\n      return (\r\n        <div>\r\n          {/* This is the search bar */}\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"search\"\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"emptypage\">\r\n            <h1> You have not added any events! </h1>\r\n            <h3> Please add events in calendar to view. </h3>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const filteredSearch = data.filter(eventCard => {\r\n        return eventCard.title.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n      });\r\n      return (\r\n        <div>\r\n          {/*  This is for the search bar */}\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"search\"\r\n              placeholder=\"Search...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          {/*This is for the edit option menu  */}\r\n          {this.renderForm()}\r\n\r\n          {/* this is for the event cards */}\r\n          {filteredSearch.map((eventCard, index) => {\r\n            return this.createCard(eventCard, index);\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // This is final closing tag\r\n  }\r\n}\r\n// window.onload = EventsPage;\r\n\r\nexport default EventsPage;\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigationBar from \"./NavigationBar\";\nimport Calendar from \"./Calendar\";\nimport EventsPage from \"./EventsPage\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header />\n        <NavigationBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Calendar\" component={Calendar} />\n          <Route path=\"/EventsPage\" component={EventsPage} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nconst Home = () => (\n  <div className=\"HomePage\">\n    <h1> Welcome to Keeper Application!</h1>\n    <h3> Feel free to look around the calendar and event Scheduling. </h3>\n    <Link to=\"/Calendar\" style={{ textDecoration: \"none\" }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<DateRangeIcon />}\n      >\n        Calendar\n      </Button>\n    </Link>\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}